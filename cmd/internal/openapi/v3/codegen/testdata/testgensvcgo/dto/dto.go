/**
* Generated by odin v2.0.4.
* You can edit it as your need.
 */
package dto

//go:generate odin name --file $GOFILE
// Alert Alert has info for an alert.
type Alert struct {
	ActiveAt *string

	Annotations *Labels

	Labels *Labels

	State *string

	Value *string
}

// AlertmanagerDiscovery AlertmanagerDiscovery has all the active Alertmanagers.
type AlertmanagerDiscovery struct {
	ActiveAlertmanagers []AlertmanagerTarget

	DroppedAlertmanagers []AlertmanagerTarget
}

// AlertmanagerTarget AlertmanagerTarget has info on one AM.
type AlertmanagerTarget struct {
	Url *string
}

// DroppedTarget DroppedTarget has the information for one target that was dropped during relabelling.
type DroppedTarget struct {
	DiscoveredLabels map[string][]string
}

// HeadStats HeadStats has information about the TSDB head.
type HeadStats struct {
	ChunkCount *int64

	MaxTime *int64

	MinTime *int64

	NumLabelPairs *int64

	NumSeries *int
}

// Label Label is a key/value pair of strings.
type Label struct {
	Name *string

	Value *string
}

// Labels Labels is a sorted set of labels. Order has to be guaranteed upon
// instantiation.
type Labels struct {
}

// MetricType MetricType represents metric type values.
type MetricType struct {
}

// PrometheusVersion PrometheusVersion contains build information about Prometheus.
type PrometheusVersion struct {
	Branch *string

	BuildDate *string

	BuildUser *string

	GoVersion *string

	Revision *string

	Version *string
}

// RuleDiscovery RuleDiscovery has info for all rules
type RuleDiscovery struct {
	RuleGroups []RuleGroup
}

// RuleGroup RuleGroup has info for rules which are part of a group
type RuleGroup struct {
	EvaluationTime *float64

	File *string

	Interval *float64

	LastEvaluation *string

	Name *string
	// In order to preserve rule ordering, while exposing type (alerting or recording)
	// specific properties, both alerting and recording rules are exposed in the
	// same array.
	Rules []Rule
}

// RuntimeInfo RuntimeInfo contains runtime information about Prometheus.
type RuntimeInfo struct {
	CWD *string

	GODEBUG *string

	GOGC *string

	GOMAXPROCS *int

	CorruptionCount *int64

	GoroutineCount *int

	LastConfigTime *string

	ReloadConfigSuccess *bool

	StartTime *string

	StorageRetention *string
}

// Target Target has the information for one target.
type Target struct {
	DiscoveredLabels map[string][]string

	GlobalURL *string

	Health *TargetHealth

	Labels *Labels

	LastError *string

	LastScrape *string

	LastScrapeDuration *float64

	ScrapePool *string

	ScrapeURL *string
}

// TargetDiscovery TargetDiscovery has all the active targets.
type TargetDiscovery struct {
	ActiveTargets []Target

	DroppedTargets []DroppedTarget
}

// TargetHealth TargetHealth describes the health state of a target.
type TargetHealth struct {
}

type Metadata struct {
	Help *string

	Type *MetricType

	Unit *string
}

type MetricMetadata struct {
	Help *string

	Metric *string

	Target *Labels

	Type *MetricType

	Unit *string
}

// PrometheusConfig a dumped YAML file
type PrometheusConfig struct {
	YAML *string
}

type QueryData struct {
	Result *struct {
		Metric *struct {
			Name     *string `json:"__name__" url:"__name__"`
			Job      *string `json:"job" url:"job"`
			Instance *string `json:"instance" url:"instance"`
		} `json:"metric" url:"metric"`
		Value *[]interface{} `json:"value" url:"value"`
	}

	ResultType *string
}

// ResponseLabelNames a list of string label names
type ResponseLabelNames struct {
}

// ResponseLabelValues a list of string label values
type ResponseLabelValues struct {
}

type ResponseQueryExemplars struct {
	Exemplars *struct {
		Labels *struct {
			TraceID *string `json:"traceID" url:"traceID"`
		} `json:"labels" url:"labels"`
		Values    *string `json:"values" url:"values"`
		Timestamp *string `json:"timestamp" url:"timestamp"`
	}

	SeriesLabels *struct {
		Service  *string `json:"service" url:"service"`
		Name     *string `json:"__name__" url:"__name__"`
		Job      *string `json:"job" url:"job"`
		Instance *string `json:"instance" url:"instance"`
	}
}

type ResponseQueryRange struct {
	Result *struct {
		Metric *struct {
			Job      *string `json:"job" url:"job"`
			Instance *string `json:"instance" url:"instance"`
			Name     *string `json:"__name__" url:"__name__"`
		} `json:"metric" url:"metric"`
		Values *[]interface{} `json:"values" url:"values"`
	}

	ResultType *string
}

// ResponseSeries a list of objects that contain the label name/value pairs which identify each series
type ResponseSeries struct {
}

type ResponseSnapshot struct {
	Name *string
}

// ResponseTargetMetadata A list of objects
type ResponseTargetMetadata struct {
}

type Rule struct {
}

// Stat stat holds the information about individual cardinality.
type Stat struct {
	Name *string

	Value *int
}

// TsdbStatus tsdbStatus has information of cardinality statistics from postings.
type TsdbStatus struct {
	HeadStats *HeadStats
	// This will provide a list of the label names and their value count.
	LabelValueCountByLabelName []Stat
	// This will provide a list of the label names and memory used in bytes. Memory usage is calculated by adding the length of all values for a given label name.
	MemoryInBytesByLabelName []Stat
	// This will provide a list of label value pairs and their series count.
	SeriesCountByLabelValuePair []Stat
	// This will provide a list of metrics names and their series count.
	SeriesCountByMetricName []Stat
}

type WalReplayStatus struct {
	Current *int

	Max *int

	Min *int
}
