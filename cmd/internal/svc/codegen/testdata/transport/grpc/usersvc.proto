/**
* Generated by odin v2.0.4.
* Don't edit!
*
* Version No.: v20230115
*/
syntax = "proto3";

package usersvc;
option go_package = "testdata/transport/grpc";

import "google/protobuf/any.proto";


message DownloadAvatarRpcRequest {
  google.protobuf.Any userId = 1 [json_name="userId"];
  bytes data = 2 [json_name="data"];
  repeated string userAttrs = 3 [json_name="userAttrs"];
}

message DownloadAvatarRpcResponse {
  bytes rf = 1 [json_name="rf"];
}

// DroppedTarget DroppedTarget has the information for one target that was dropped during relabelling.
message DroppedTarget {
  map<string, StringSliceWrapper> discoveredLabels = 1 [json_name="discoveredLabels"];
}

message GetUserRpcRequest {
  // 用户ID
  string userId = 1 [json_name="userId"];
  // 图片地址
  string photo = 2 [json_name="photo"];
}

message GetUserRpcResponse {
  int32 code = 1 [json_name="code"];
  string data = 2 [json_name="data"];
}

message PageUsersRpcResponse {
  int32 code = 1 [json_name="code"];
  google.protobuf.Any data = 2 [json_name="data"];
}

message SignUpRpcRequest {
  string username = 1 [json_name="username"];
  int32 password = 2 [json_name="password"];
  bool actived = 3 [json_name="actived"];
  repeated int32 score = 4 [json_name="score"];
}

message SignUpRpcResponse {
  int32 code = 1 [json_name="code"];
  string data = 2 [json_name="data"];
}

message StringSliceWrapper {
  repeated string value = 1 [json_name="value"];
}

// Target Target has the information for one target.
message Target {
  map<string, StringSliceWrapper> discoveredLabels = 1 [json_name="discoveredLabels"];
  string globalURL = 2 [json_name="globalURL"];
  google.protobuf.Any health = 3 [json_name="health"];
  google.protobuf.Any labels = 4 [json_name="labels"];
  string lastError = 5 [json_name="lastError"];
  string lastScrape = 6 [json_name="lastScrape"];
  double lastScrapeDuration = 7 [json_name="lastScrapeDuration"];
  string scrapePool = 8 [json_name="scrapePool"];
  string scrapeURL = 9 [json_name="scrapeURL"];
}

message UploadAvatarRpcRequest {
  repeated bytes pf = 1 [json_name="pf"];
  string ps = 2 [json_name="ps"];
  bytes pf2 = 3 [json_name="pf2"];
  google.protobuf.Any pf3 = 4 [json_name="pf3"];
  repeated google.protobuf.Any pf4 = 5 [json_name="pf4"];
}

message UploadAvatarRpcResponse {
  int32 ri = 1 [json_name="ri"];
  google.protobuf.Any ri2 = 2 [json_name="ri2"];
}

service UsersvcService {
  // You can define your service methods as your need. Below is an example.@role(user)
  rpc PageUsersRpc(google.protobuf.Any) returns (PageUsersRpcResponse);
  // comment1
// comment2
// @role(admin)
  rpc GetUserRpc(GetUserRpcRequest) returns (GetUserRpcResponse);
  // comment3
// @permission(create,update)@role(admin)
  rpc SignUpRpc(SignUpRpcRequest) returns (SignUpRpcResponse);
  // comment4
// @role(user)
  rpc UploadAvatarRpc(UploadAvatarRpcRequest) returns (UploadAvatarRpcResponse);
  // comment5
  rpc DownloadAvatarRpc(DownloadAvatarRpcRequest) returns (DownloadAvatarRpcResponse);
}
